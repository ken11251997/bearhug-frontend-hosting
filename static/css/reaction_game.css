/* === 共通レイアウト === */
body {
  font-family: 'Helvetica Neue', sans-serif;
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  background: linear-gradient(to bottom, #fffaf0, #ffe4c4);
  background-size: cover;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background: url("../img/reaction.jpg") no-repeat center center fixed;
  background-size: cover;
  position: relative; /* ←オーバーレイのために追加 */
}

.container {
  width: 100vw;
  height: 100vh;
  padding: 0;
  margin: 0;
  background: transparent;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.6); /* ← 白＋60%透明 */
  position: relative; /* ✅ ←追加！ */
  z-index: 1;
}

.container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(255, 255, 255, 0.6); /* ← 白＋60%透明 */
  z-index: 0;
}


h1 {
  color: #8b4513;
  font-size: 20px;
  margin-bottom: 1rem;
}

.desc {
  font-size: 16px;
  color: #444;
  margin-bottom: 12px;
  text-align: center;
}
esc, .section, .main-button, .sub-button {
  position: relative;  /* ✅ これが無いと z-index 効かない */
  z-index: 2;           /* ✅ 背景より前面へ */
}

#question-text {
  font-size: 18px;
  margin-bottom: 8px;
  color: #8b4513;
}

#live-timer {
  font-size: 18px;
  font-weight: bold;
  color: #006400;
  margin: 8px 0;
}

.penalty-text {
  font-size: 16px;
  color: red;
  margin-bottom: 10px;
  transition: opacity 0.5s;
}

.penalty-text.hidden {
  opacity: 0;
}

#target-face img {
  width: 100px;
  height: auto;
  margin-bottom: 12px;
  min-height: 100px; /* imgタグの高さと同じに */
}

#options-grid {
  display: grid;
  grid-gap: 8px;
  justify-content: center;
  align-items: center;
  max-width: 95vw;
  margin-top: 8px;
  min-height: 200px; /* 最大81択時の高さに余裕をもたせる */
}

/* グリッドのサイズはJSで可変調整 */
.option {
  position: relative;
  cursor: pointer;
}

.option img {
  width: 48px;
  height: 48px;
  object-fit: contain;
  border-radius: 6px;
  border: 2px solid transparent;
}

.option .marker {
  position: absolute;
  top: 4px;
  right: 4px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  display: none;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: 16px;
  color: white;
}

.option.correct .marker {
  background-color: red;
  display: flex;
}

.option.wrong .marker {
  background-color: blue;
  display: flex;
  border-radius: 0;
  width: 20px;
  height: 20px;
}

#result-score {
  font-size: 20px;
  color: #ff0021;
  margin-bottom: 12px;
}

.section {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.hidden {
  display: none !important;
}


#options-grid {
  display: grid;
  grid-gap: 8px;
  justify-content: center;
  align-items: center;
  max-width: 95vw;
  margin-top: 8px;
  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr)); /* ✅ 自動折り返し */
}

.timer-row {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  min-height: 1.5em; /* ✅ 高さを固定してずれを防ぐ */
  position: relative;
}

/* #live-timer {
  font-size: 18px;
  font-weight: bold;
  color: #006400;
} */

.penalty-text {
  font-size: 16px;
  color: red;
  transition: opacity 0.5s;
  opacity: 1;
}

.penalty-text.hidden {
  opacity: 0;
}

/* === ボタン共通 === */
.btn {
  width: 100%;
  padding: 12px;
  font-size: 16px;
  margin-top: 12px;
  border: none;
  border-radius: 8px;
  background-color: #8b4513;
  color: white;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s;
  z-index: 2
}
.btn:hover {
  background-color: #a0522d;
}

/* === 戻るボタン（左上固定）=== */
.back-button {
  position: fixed;
  top: 16px;
  left: 16px;
  background-color: #fffaf0;
  color: #8b4513;
  padding: 8px 12px;
  border: 2px solid #8b4513;
  border-radius: 8px;
  font-weight: bold;
  text-decoration: none;
  z-index: 1000;
  font-size: 14px;
  z-index: 2
}
.back-button:hover {
  background-color: #f0e6d6;
}

/* === ローディングオーバーレイ === */
#loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(255, 255, 255, 0.8);
  z-index: 2000;
  display: none;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.loading-box {
  text-align: center;
}

.spinner {
  width: 36px;
  height: 36px;
  border: 5px solid #ccc;
  border-top-color: #8b4513;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto 12px;
}

.bear-loader {
  width: 60px;
  margin-bottom: 8px;
}

.loading-text {
  font-size: 16px;
  color: #8b4513;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.confetti {
  position: fixed;
  top: -10px;
  width: 10px;
  height: 10px;
  background-color: pink;
  border-radius: 50%;
  opacity: 0.9;
  animation: fall 3s linear forwards;
  z-index: 9999;
}

@keyframes fall {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

.hidden {
  display: none;
}


/* 🎉 ポップなタイトルアニメーション */
@keyframes pop-bounce {
  0%   { transform: scale(0.9); opacity: 0; }
  50%  { transform: scale(1.2); opacity: 1; }
  70%  { transform: scale(0.95); }
  100% { transform: scale(1); }
}

.pop-title {
  animation: pop-bounce 1s ease-out;
  font-size: 28px;
  font-weight: bold;
  color: #d2691e;
  text-shadow: 2px 2px 0 #fff;
  transition: transform 0.3s;
  position: relative;
  z-index: 2; /* ✅ 背景より前に出す */
}


/* 🎨 計算ゲームと同じボタンスタイルを適用 */
.main-button, .sub-button {
  font-size: 1.2rem;
  padding: 12px;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s;
  width: 90%;
  max-width: 320px;
  margin-top: 12px;
  z-index: 2
}

.main-button {
  background: #ffccdd;
  color: #800040;
  box-shadow: 0 4px 0 #e49fb2;
}

.sub-button {
  background: #bdefff;
  color: #004488;
  box-shadow: 0 4px 0 #9bd6ec;
}

.main-button:hover,
.sub-button:hover {
  transform: scale(1.05);
}

#countdown-text {
  position: absolute;
  top: 45%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2.5rem;
  color: #ff4081;
  font-weight: bold;
  z-index: 2000;
  animation: scaleIn 0.3s ease;
  white-space: nowrap; /* ✅ 1行で表示させるため追加 */
}

@keyframes scaleIn {
  0% { transform: scale(0.7) translate(-50%, -50%); opacity: 0; }
  100% { transform: scale(1) translate(-50%, -50%); opacity: 1; }
}